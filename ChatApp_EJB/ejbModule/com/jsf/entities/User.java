package com.jsf.entities;
// Generated 2019-02-19 14:33:32 by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "chatapp")
public class User implements java.io.Serializable {

	private static final long serialVersionUID = 5753549227066374807L;
	
	private Integer id;
	private String login;
	private String password;
	private String email;
	private String forename;
	private String surname;
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<Friend> friendsForFriendId = new HashSet<Friend>(0);
	private Set<Friend> friendsForUserId = new HashSet<Friend>(0);
	private Set<Chat> chats = new HashSet<Chat>(0);

	public User() {
	}

	public User(String login, String password, String email, String forename, String surname, Set<Message> messages,
			Set<Friend> friendsForFriendId, Set<Friend> friendsForUserId, Set<Chat> chats) {
		this.login = login;
		this.password = password;
		this.email = email;
		this.forename = forename;
		this.surname = surname;
		this.messages = messages;
		this.friendsForFriendId = friendsForFriendId;
		this.friendsForUserId = friendsForUserId;
		this.chats = chats;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "login", length = 45)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "forename", length = 45)
	public String getForename() {
		return this.forename;
	}

	public void setForename(String forename) {
		this.forename = forename;
	}

	@Column(name = "surname", length = 45)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByFriendId")
	public Set<Friend> getFriendsForFriendId() {
		return this.friendsForFriendId;
	}

	public void setFriendsForFriendId(Set<Friend> friendsForFriendId) {
		this.friendsForFriendId = friendsForFriendId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserId")
	public Set<Friend> getFriendsForUserId() {
		return this.friendsForUserId;
	}

	public void setFriendsForUserId(Set<Friend> friendsForUserId) {
		this.friendsForUserId = friendsForUserId;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "chat_has_user", catalog = "chatapp", joinColumns = {
			@JoinColumn(name = "userID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "chatID", nullable = false, updatable = false) })
	public Set<Chat> getChats() {
		return this.chats;
	}

	public void setChats(Set<Chat> chats) {
		this.chats = chats;
	}

}
